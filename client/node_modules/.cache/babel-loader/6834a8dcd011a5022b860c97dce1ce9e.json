{"ast":null,"code":"import { ADD_FAVORITE, DELETE_FAVORITE, UPDATE_BOOKS, UPDATE_PAGE } from '../constants/action-types';\nimport BookCollection from \"../../model/bookcollection.model\";\nconst initialState = {\n  books_home: BookCollection,\n  books_favorite: BookCollection,\n  list: []\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === UPDATE_BOOKS) {\n    const collectionToUpdate = action.payload.collectionName;\n    let collectionState = state[collectionToUpdate];\n    Object.assign(collectionState, {\n      books: action.payload.books,\n      currentIndex: action.payload.currentIndex,\n      resultsPerPage: action.payload.resultsPerPage,\n      pageCount: action.payload.pageCount,\n      currentPage: action.payload.currentPage\n    });\n    return { ...state,\n      collectionState\n    };\n  }\n\n  if (action.type === UPDATE_PAGE) {\n    const collectionToUpdate = action.payload.collectionName;\n    let collectionState = state[collectionToUpdate];\n    Object.assign(collectionState, {\n      currentIndex: action.payload.currentIndex,\n      currentPage: action.payload.currentPage\n    });\n    return { ...state,\n      collectionState\n    };\n  }\n\n  if (action.type === ADD_FAVORITE) {\n    return state.list.concat(...action.payload.favorite);\n    /*\n    let list = state.list;\n    list.concat(action.payload.favorite);\n    return {...state, list};\n     */\n  }\n\n  if (action.type === DELETE_FAVORITE) {\n    //let list = state.list;\n    //list = list.filter(x => x !== action.payload.favorite)\n    return { ...state,\n      list: state.list.filter(x => x !== action.payload.favorite)\n    };\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/redux/reducers/index.jsx"],"names":["ADD_FAVORITE","DELETE_FAVORITE","UPDATE_BOOKS","UPDATE_PAGE","BookCollection","initialState","books_home","books_favorite","list","rootReducer","state","action","type","collectionToUpdate","payload","collectionName","collectionState","Object","assign","books","currentIndex","resultsPerPage","pageCount","currentPage","concat","favorite","filter","x"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,eAAtB,EAAuCC,YAAvC,EAAqDC,WAArD,QAAuE,2BAAvE;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,UAAU,EAAEF,cADQ;AAEpBG,EAAAA,cAAc,EAAEH,cAFI;AAGpBI,EAAAA,IAAI,EAAE;AAHc,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,YAApB,EAAkC;AACjC,UAAMW,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,cAA1C;AACA,QAAIC,eAAe,GAAGN,KAAK,CAACG,kBAAD,CAA3B;AACAI,IAAAA,MAAM,CAACC,MAAP,CAAcF,eAAd,EAA8B;AAC7BG,MAAAA,KAAK,EAAER,MAAM,CAACG,OAAP,CAAeK,KADO;AAE7BC,MAAAA,YAAY,EAAET,MAAM,CAACG,OAAP,CAAeM,YAFA;AAG7BC,MAAAA,cAAc,EAAEV,MAAM,CAACG,OAAP,CAAeO,cAHF;AAI7BC,MAAAA,SAAS,EAAEX,MAAM,CAACG,OAAP,CAAeQ,SAJG;AAK7BC,MAAAA,WAAW,EAAEZ,MAAM,CAACG,OAAP,CAAeS;AALC,KAA9B;AAOA,WAAO,EAAC,GAAGb,KAAJ;AAAWM,MAAAA;AAAX,KAAP;AACA;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgBT,WAApB,EAAiC;AAChC,UAAMU,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,cAA1C;AACA,QAAIC,eAAe,GAAGN,KAAK,CAACG,kBAAD,CAA3B;AACAI,IAAAA,MAAM,CAACC,MAAP,CAAcF,eAAd,EAA+B;AAC9BI,MAAAA,YAAY,EAAET,MAAM,CAACG,OAAP,CAAeM,YADC;AAE9BG,MAAAA,WAAW,EAAEZ,MAAM,CAACG,OAAP,CAAeS;AAFE,KAA/B;AAIA,WAAO,EAAC,GAAGb,KAAJ;AAAWM,MAAAA;AAAX,KAAP;AACA;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgBZ,YAApB,EAAkC;AACjC,WAAOU,KAAK,CAACF,IAAN,CAAWgB,MAAX,CAAkB,GAAGb,MAAM,CAACG,OAAP,CAAeW,QAApC,CAAP;AACA;;;;;AAKA;;AAED,MAAId,MAAM,CAACC,IAAP,KAAgBX,eAApB,EAAqC;AACpC;AACA;AACA,WAAO,EAAC,GAAGS,KAAJ;AAAWF,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWkB,MAAX,CAAkBC,CAAC,IAAIA,CAAC,KAAKhB,MAAM,CAACG,OAAP,CAAeW,QAA5C;AAAjB,KAAP;AACA;;AACD,SAAOf,KAAP;AACA,CAvCD;;AAyCA,eAAeD,WAAf","sourcesContent":["import {ADD_FAVORITE, DELETE_FAVORITE, UPDATE_BOOKS, UPDATE_PAGE} from '../constants/action-types';\nimport BookCollection from \"../../model/bookcollection.model\";\n\nconst initialState = {\n\tbooks_home: BookCollection,\n\tbooks_favorite: BookCollection,\n\tlist: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n\tif (action.type === UPDATE_BOOKS) {\n\t\tconst collectionToUpdate = action.payload.collectionName;\n\t\tlet collectionState = state[collectionToUpdate];\n\t\tObject.assign(collectionState,{\n\t\t\tbooks: action.payload.books,\n\t\t\tcurrentIndex: action.payload.currentIndex,\n\t\t\tresultsPerPage: action.payload.resultsPerPage,\n\t\t\tpageCount: action.payload.pageCount,\n\t\t\tcurrentPage: action.payload.currentPage\n\t\t})\n\t\treturn {...state, collectionState};\n\t}\n\n\tif (action.type === UPDATE_PAGE) {\n\t\tconst collectionToUpdate = action.payload.collectionName;\n\t\tlet collectionState = state[collectionToUpdate];\n\t\tObject.assign(collectionState, {\n\t\t\tcurrentIndex: action.payload.currentIndex,\n\t\t\tcurrentPage: action.payload.currentPage,\n\t\t});\n\t\treturn {...state, collectionState};\n\t}\n\n\tif (action.type === ADD_FAVORITE) {\n\t\treturn state.list.concat(...action.payload.favorite);\n\t\t/*\n\t\tlet list = state.list;\n\t\tlist.concat(action.payload.favorite);\n\t\treturn {...state, list};\n\t\t */\n\t}\n\n\tif (action.type === DELETE_FAVORITE) {\n\t\t//let list = state.list;\n\t\t//list = list.filter(x => x !== action.payload.favorite)\n\t\treturn {...state, list: state.list.filter(x => x !== action.payload.favorite)}\n\t}\n\treturn state;\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}