{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\googlebooks\\\\client\\\\src\\\\pages\\\\home\\\\home.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport { BookErrors } from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport { connect } from 'react-redux';\nimport AppList from '../../components/list/list';\nimport { setFavorites, updateBooks } from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\nimport paginationService from \"../../services/pagination.service\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FavoriteApi from \"../../api/favorite.api\";\nimport './home.css';\n\nconst mapStateToProps = state => {\n  const storeProps = {};\n\n  for (const [key, value] of Object.entries(state)) {\n    storeProps[key] = value;\n  }\n\n  return {\n    storeProps\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateBooks: bookUpdate => new Promise((resolve, reject) => {\n    dispatch(updateBooks(bookUpdate));\n    resolve();\n  }),\n  setFavorites: favorites => {\n    dispatch(setFavorites(favorites));\n  }\n});\n\nconst useStyles = theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  }\n});\n\nclass AppHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      fetchingBooks: false,\n      searchValue: '',\n      errorMessage: '',\n      oldSearchValue: '',\n      defaultCollection: 'books_home',\n      resultsPerPage: 10,\n      currentPage: 1,\n      collectionSearch: ''\n    };\n\n    this.doSearch = page_number => {\n      // get collection\n      const currentCollect = this.props.storeProps[this.state.defaultCollection];\n      const bookCollection = currentCollect ? currentCollect : new BookCollection();\n      let currentPage = page_number ? page_number : bookCollection.currentPage;\n      let searchIndex = (currentPage - 1) * this.state.resultsPerPage;\n      const oldSearchValue = this.state.oldSearchValue;\n      this.setState({\n        error: false\n      });\n      const searchValue = this.state.searchValue;\n\n      if (!searchValue) {\n        this.setState({\n          error: true,\n          errorMessage: BookErrors.nosearch\n        });\n        return;\n      } // reset pagination info on new search\n\n\n      if (searchValue !== oldSearchValue) {\n        searchIndex = 0;\n        currentPage = 1;\n      }\n\n      this.setState({\n        fetchingBooks: true\n      });\n      this.booksApi.searchBooks(searchValue, searchIndex).then(bookData => {\n        this.setState({\n          fetchingBooks: false\n        });\n        const bookTotal = bookData && bookData.data && bookData.data.totalItems;\n        const rawBookData = bookData && bookData.data && bookData.data.items;\n\n        if (!rawBookData) {\n          this.setState({\n            error: true,\n            errorMessage: BookErrors.nobooks\n          });\n          return;\n        }\n\n        const books = rawBookData.map(x => new BookModel(x));\n        const pageCount = Math.ceil(bookTotal / this.state.resultsPerPage);\n        this.props.updateBooks({\n          collectionName: this.state.defaultCollection,\n          books: books,\n          pageCount: pageCount > 50 ? 40 : pageCount,\n          currentPage: currentPage,\n          bookSearch: searchValue\n        }).then(() => {\n          this.setState({\n            error: false,\n            oldSearchValue: searchValue\n          });\n        });\n      });\n    };\n\n    this.booksApi = new BooksApi();\n    this.favoriteApi = new FavoriteApi();\n  }\n\n  captureSearchValue(event) {\n    this.setState({\n      searchValue: event.target.value,\n      collectionSearch: event.target.value\n    });\n  }\n\n  keyPressed(event) {\n    if (event.key === 'Enter') {\n      this.doSearch();\n    }\n  }\n\n  componentDidMount() {\n    this.subscription = paginationService.getPage().subscribe(pageNumber => {\n      this.doSearch(pageNumber);\n    }); //get the favorites from the backend\n\n    this.favoriteApi.getIds().then(favorites => {\n      if (!favorites && !favorites.data) {\n        return;\n      }\n\n      this.props.setFavorites({\n        favorites: favorites.data\n      });\n    }); //check to see if our collection has any books from a previous search\n\n    const currentCollect = this.props.storeProps[this.state.defaultCollection];\n\n    if (currentCollect && currentCollect.books && currentCollect.books.length > 0) {\n      //get the search value too\n      const bookSearch = currentCollect.bookSearch || '';\n      this.setState({\n        collectionSearch: bookSearch,\n        oldSearchValue: bookSearch,\n        searchValue: bookSearch\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    const error = this.state.error;\n    const fetchingBooks = this.state.fetchingBooks;\n    const currentCollect = this.props.storeProps[this.state.defaultCollection];\n    const hasBooks = currentCollect && currentCollect.books && currentCollect.books.length > 0;\n    const errorMessage = this.state.errorMessage;\n    const bookCollection = this.state.defaultCollection;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"start\",\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"Search Books\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      className: \"px-0 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Search\",\n      onChange: e => this.captureSearchValue(e),\n      onKeyPress: e => this.keyPressed(e),\n      value: this.state.collectionSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: e => this.doSearch(),\n      variant: \"primary\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 16\n      }\n    }, \"Search\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.grow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, hasBooks ? /*#__PURE__*/React.createElement(AppList, {\n      collectionToUse: bookCollection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }\n    }) : fetchingBooks ? /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center fetching-books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, \"Searching for books...\") : error ? /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, errorMessage) : /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"no-books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 119\n      }\n    }, \"Type in search to find books\"))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(AppHome));","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/pages/home/home.jsx"],"names":["React","Component","Button","Col","Form","Row","BooksApi","BookErrors","BookModel","connect","AppList","setFavorites","updateBooks","BookCollection","paginationService","AppBar","Toolbar","IconButton","Typography","withStyles","FavoriteApi","mapStateToProps","state","storeProps","key","value","Object","entries","mapDispatchToProps","dispatch","bookUpdate","Promise","resolve","reject","favorites","useStyles","theme","grow","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","marginRight","spacing","marginLeft","width","AppHome","constructor","props","error","fetchingBooks","searchValue","errorMessage","oldSearchValue","defaultCollection","resultsPerPage","currentPage","collectionSearch","doSearch","page_number","currentCollect","bookCollection","searchIndex","setState","nosearch","booksApi","searchBooks","then","bookData","bookTotal","data","totalItems","rawBookData","items","nobooks","books","map","x","pageCount","Math","ceil","collectionName","bookSearch","favoriteApi","captureSearchValue","event","target","keyPressed","componentDidMount","subscription","getPage","subscribe","pageNumber","getIds","length","componentWillUnmount","unsubscribe","render","hasBooks","classes","menuButton","e"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Form, Row} from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport {BookErrors} from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport {connect} from 'react-redux';\nimport AppList from '../../components/list/list';\nimport {setFavorites, updateBooks} from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\nimport paginationService from \"../../services/pagination.service\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport FavoriteApi from \"../../api/favorite.api\";\nimport './home.css';\n\nconst mapStateToProps = (state) => {\n\tconst storeProps = {};\n\tfor (const [key, value] of Object.entries(state)) {\n\t\tstoreProps[key] = value;\n\t}\n\treturn {\n\t\tstoreProps\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateBooks: (bookUpdate) => new Promise((resolve, reject) => {\n\t\tdispatch(updateBooks(bookUpdate));\n\t\tresolve();\n\t}),\n\tsetFavorites: (favorites) => {\n\t\tdispatch(setFavorites(favorites))\n\t}\n});\n\nconst useStyles = theme => ({\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\ttitle: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'block',\n\t\t},\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tmarginRight: theme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: theme.spacing(3),\n\t\t\twidth: 'auto',\n\t\t},\n\t}\n});\n\nclass AppHome extends Component {\n     state = {\n     \terror: false,\n     \tfetchingBooks: false,\n     \tsearchValue: '',\n     \terrorMessage: '',\n     \toldSearchValue: '',\n     \tdefaultCollection: 'books_home',\n     \tresultsPerPage: 10,\n     \tcurrentPage: 1,\n     \tcollectionSearch: '',\n     };\n\n     constructor(props) {\n     \tsuper(props);\n     \tthis.booksApi = new BooksApi();\n     \tthis.favoriteApi = new FavoriteApi();\n     }\n\n     captureSearchValue(event) {\n     \tthis.setState({searchValue: event.target.value, collectionSearch: event.target.value});\n     }\n\n     keyPressed(event) {\n     \tif (event.key === 'Enter') {\n     \t\tthis.doSearch();\n     \t}\n     }\n\n\n     componentDidMount() {\n     \tthis.subscription = paginationService.getPage().subscribe(pageNumber => {\n     \t\tthis.doSearch(pageNumber);\n     \t})\n     \t//get the favorites from the backend\n     \tthis.favoriteApi.getIds()\n     \t\t.then((favorites) => {\n     \t\t\tif (!favorites && !favorites.data) {\n     \t\t\t\treturn;\n     \t\t\t}\n     \t\t\tthis.props.setFavorites({favorites: favorites.data});\n     \t\t});\n     \t//check to see if our collection has any books from a previous search\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tif (currentCollect && currentCollect.books && currentCollect.books.length > 0) {\n     \t\t//get the search value too\n     \t\tconst bookSearch = currentCollect.bookSearch || '';\n     \t\tthis.setState({collectionSearch: bookSearch, oldSearchValue: bookSearch, searchValue: bookSearch});\n     \t}\n     }\n\n     componentWillUnmount() {\n     \tthis.subscription.unsubscribe();\n     }\n\n     doSearch = (page_number) => {\n     \t// get collection\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tconst bookCollection = currentCollect ? currentCollect : new BookCollection();\n     \tlet currentPage = page_number ? page_number : bookCollection.currentPage;\n     \tlet searchIndex = (currentPage - 1) * this.state.resultsPerPage;\n     \tconst oldSearchValue = this.state.oldSearchValue;\n     \tthis.setState({error: false});\n\n     \tconst searchValue = this.state.searchValue;\n     \tif (!searchValue) {\n     \t\tthis.setState({error: true, errorMessage: BookErrors.nosearch});\n     \t\treturn;\n     \t}\n\n     \t// reset pagination info on new search\n     \tif (searchValue !== oldSearchValue) {\n     \t\tsearchIndex = 0;\n     \t\tcurrentPage = 1;\n     \t}\n\n     \tthis.setState({fetchingBooks: true});\n     \tthis.booksApi.searchBooks(searchValue, searchIndex)\n     \t\t.then((bookData) => {\n     \t\t\tthis.setState({fetchingBooks: false});\n     \t\t\tconst bookTotal = bookData && bookData.data && bookData.data.totalItems;\n     \t\t\tconst rawBookData = bookData && bookData.data && bookData.data.items;\n     \t\t\tif (!rawBookData) {\n     \t\t\t\tthis.setState({error: true, errorMessage: BookErrors.nobooks});\n     \t\t\t\treturn;\n     \t\t\t}\n     \t\t\tconst books = rawBookData.map((x) => new BookModel(x));\n     \t\t\tconst pageCount = Math.ceil(bookTotal / this.state.resultsPerPage);\n     \t\t\tthis.props.updateBooks({\n     \t\t\t\tcollectionName: this.state.defaultCollection,\n     \t\t\t\tbooks: books,\n     \t\t\t\tpageCount: pageCount > 50 ? 40 : pageCount,\n     \t\t\t\tcurrentPage: currentPage,\n     \t\t\t\tbookSearch: searchValue,\n     \t\t\t}).then(() => {\n     \t\t\t\tthis.setState({error: false, oldSearchValue: searchValue});\n     \t\t\t});\n\n     \t\t});\n     }\n\n     render() {\n     \tconst error = this.state.error;\n     \tconst fetchingBooks = this.state.fetchingBooks;\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tconst hasBooks = currentCollect && currentCollect.books && currentCollect.books.length > 0;\n     \tconst errorMessage = this.state.errorMessage;\n     \tconst bookCollection = this.state.defaultCollection;\n     \tconst {classes} = this.props;\n     \treturn (\n     \t\t<React.Fragment>\n     \t\t\t<Row>\n     \t\t\t\t<Col>\n     \t\t\t\t\t<AppBar position=\"static\">\n     \t\t\t\t\t\t<Toolbar>\n     \t\t\t\t\t\t\t<IconButton\n     \t\t\t\t\t\t\t\tedge=\"start\"\n     \t\t\t\t\t\t\t\tclassName={classes.menuButton}\n     \t\t\t\t\t\t\t\tcolor=\"inherit\"\n     \t\t\t\t\t\t\t\taria-label=\"open drawer\"\n     \t\t\t\t\t\t\t>\n     \t\t\t\t\t\t\t</IconButton>\n     \t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n                                             Search Books\n     \t\t\t\t\t\t\t</Typography>\n     \t\t\t\t\t\t\t<div className={classes.search}>\n     \t\t\t\t\t\t\t\t<Row className=\"px-0\">\n     \t\t\t\t\t\t\t\t\t<Col sm={8} className=\"px-0 mr-3\">\n     \t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Search\"\n     \t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.captureSearchValue(e)}\n     \t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => this.keyPressed(e)}\n     \t\t\t\t\t\t\t\t\t\t\tvalue={this.state.collectionSearch}/>\n     \t\t\t\t\t\t\t\t\t</Col>\n     \t\t\t\t\t\t\t\t\t<Col sm={3} className=\"px-0\">\n     \t\t\t\t\t\t\t\t\t\t<Button onClick={(e) =>this.doSearch()} variant=\"primary\" type=\"button\">Search</Button>\n     \t\t\t\t\t\t\t\t\t</Col>\n     \t\t\t\t\t\t\t\t</Row>\n     \t\t\t\t\t\t\t</div>\n     \t\t\t\t\t\t\t<div className={classes.grow}/>\n     \t\t\t\t\t\t</Toolbar>\n     \t\t\t\t\t</AppBar>\n     \t\t\t\t</Col>\n     \t\t\t</Row>\n     \t\t\t<Row className=\"mt-2\">\n     \t\t\t\t{hasBooks ? <AppList collectionToUse={bookCollection}/> : fetchingBooks ?\n     \t\t\t\t\t<Col className=\"text-center fetching-books\">Searching for books...</Col> :\n     \t\t\t\t\terror ? <Col className=\"text-center error-message\">{errorMessage}</Col> : <Col className=\"mt-5 text-center\"><span className=\"no-books\">Type in search to find books</span></Col>}\n     \t\t\t</Row>\n     \t\t</React.Fragment>);\n     }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(AppHome));\n"]},"metadata":{},"sourceType":"module"}