{"ast":null,"code":"import { ADD_FAVORITE, DELETE_FAVORITE, UPDATE_BOOKS, UPDATE_PAGE } from '../constants/action-types';\nconst initialState = {\n  collection: [],\n  favorites: []\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === UPDATE_BOOKS) {\n    // get the correct collection\n    const collectionToUpdate = action.payload.collectionName;\n\n    if (!collectionToUpdate) {\n      return;\n    }\n\n    const currentCollection = state.collection[collectionToUpdate];\n\n    if (!currentCollection) {\n      return;\n    }\n\n    return Object.assign({}, currentCollection, {\n      books: action.payload.books,\n      pageCount: action.payload.pageCount,\n      currentPage: action.payload.currentPage,\n      currentIndex: action.payload.currentIndex\n    });\n  }\n\n  if (action.type === UPDATE_PAGE) {\n    const collectionToUpdate = action.payload.collectionName;\n\n    if (!collectionToUpdate) {\n      return;\n    }\n\n    const currentCollection = state.collection[collectionToUpdate];\n\n    if (!currentCollection) {\n      return;\n    }\n\n    return Object.assign({}, currentCollection, {\n      currentIndex: action.payload.currentIndex,\n      currentPage: action.payload.currentPage\n    });\n  }\n\n  if (action.type === ADD_FAVORITE) {\n    return Object.assign({}, state, {\n      favorites: state.favorites.concat(action.payload)\n    });\n  }\n\n  if (action.type === DELETE_FAVORITE) {\n    return Object.assign({}, state, {\n      favorites: state.favorites.concat(action.payload)\n    });\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/redux/reducers/index.js"],"names":["ADD_FAVORITE","DELETE_FAVORITE","UPDATE_BOOKS","UPDATE_PAGE","initialState","collection","favorites","rootReducer","state","action","type","collectionToUpdate","payload","collectionName","currentCollection","Object","assign","books","pageCount","currentPage","currentIndex","concat"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,eAAtB,EAAuCC,YAAvC,EAAqDC,WAArD,QAAuE,2BAAvE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBR,YAApB,EAAkC;AAChC;AACA,UAAMS,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,cAA1C;;AACA,QAAI,CAACF,kBAAL,EAAyB;AACvB;AACH;;AACC,UAAMG,iBAAiB,GAAGN,KAAK,CAACH,UAAN,CAAiBM,kBAAjB,CAA1B;;AACA,QAAI,CAACG,iBAAL,EAAwB;AACtB;AACD;;AACD,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,iBAAlB,EAAqC;AAC1CG,MAAAA,KAAK,EAAER,MAAM,CAACG,OAAP,CAAeK,KADoB;AAE1CC,MAAAA,SAAS,EAAET,MAAM,CAACG,OAAP,CAAeM,SAFgB;AAG1CC,MAAAA,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeO,WAHc;AAI1CC,MAAAA,YAAY,EAAEX,MAAM,CAACG,OAAP,CAAeQ;AAJa,KAArC,CAAP;AAMD;;AAED,MAAIX,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAC/B,UAAMQ,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,cAA1C;;AACA,QAAI,CAACF,kBAAL,EAAyB;AACvB;AACD;;AACD,UAAMG,iBAAiB,GAAGN,KAAK,CAACH,UAAN,CAAiBM,kBAAjB,CAA1B;;AACA,QAAI,CAACG,iBAAL,EAAwB;AACtB;AACD;;AACD,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,iBAAlB,EAAqC;AAC1CM,MAAAA,YAAY,EAAEX,MAAM,CAACG,OAAP,CAAeQ,YADa;AAE1CD,MAAAA,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeO;AAFc,KAArC,CAAP;AAID;;AAED,MAAIV,MAAM,CAACC,IAAP,KAAgBV,YAApB,EAAkC;AAChC,WAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BF,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBe,MAAhB,CAAuBZ,MAAM,CAACG,OAA9B;AADmB,KAAzB,CAAP;AAGD;;AAED,MAAIH,MAAM,CAACC,IAAP,KAAgBT,eAApB,EAAqC;AACnC,WAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BF,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBe,MAAhB,CAAuBZ,MAAM,CAACG,OAA9B;AADmB,KAAzB,CAAP;AAGD;;AACD,SAAOJ,KAAP;AACD,CA9CD;;AA+CA,eAAeD,WAAf","sourcesContent":["import {ADD_FAVORITE, DELETE_FAVORITE, UPDATE_BOOKS, UPDATE_PAGE} from '../constants/action-types';\n\nconst initialState = {\n  collection: [],\n  favorites: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === UPDATE_BOOKS) {\n    // get the correct collection\n    const collectionToUpdate = action.payload.collectionName;\n    if (!collectionToUpdate) {\n      return;\n\t\t}\n    const currentCollection = state.collection[collectionToUpdate];\n    if (!currentCollection) {\n      return;\n    }\n    return Object.assign({}, currentCollection, {\n      books: action.payload.books,\n      pageCount: action.payload.pageCount,\n      currentPage: action.payload.currentPage,\n      currentIndex: action.payload.currentIndex,\n    });\n  }\n\n  if (action.type === UPDATE_PAGE) {\n    const collectionToUpdate = action.payload.collectionName;\n    if (!collectionToUpdate) {\n      return;\n    }\n    const currentCollection = state.collection[collectionToUpdate];\n    if (!currentCollection) {\n      return;\n    }\n    return Object.assign({}, currentCollection, {\n      currentIndex: action.payload.currentIndex,\n      currentPage: action.payload.currentPage,\n    });\n  }\n\n  if (action.type === ADD_FAVORITE) {\n    return Object.assign({}, state, {\n      favorites: state.favorites.concat(action.payload),\n    });\n  }\n\n  if (action.type === DELETE_FAVORITE) {\n    return Object.assign({}, state, {\n      favorites: state.favorites.concat(action.payload),\n    });\n  }\n  return state;\n};\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}