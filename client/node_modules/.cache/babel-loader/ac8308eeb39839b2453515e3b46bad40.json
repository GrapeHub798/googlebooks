{"ast":null,"code":"import { ADD_FAVORITE, DELETE_FAVORITE, UPDATE_BOOKS, UPDATE_PAGE } from '../constants/action-types';\nimport BookCollection from \"../../model/bookcollection.model\";\nconst initialState = {\n  books_home: BookCollection,\n  books_favorite: BookCollection,\n  list: []\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === UPDATE_BOOKS) {\n    const collectionToUpdate = action.payload.collectionName;\n    return state[collectionToUpdate].merge({\n      books: action.payload.books,\n      currentIndex: action.payload.currentIndex,\n      resultsPerPage: action.payload.resultsPerPage,\n      pageCount: action.payload.pageCount,\n      currentPage: action.payload.currentPage\n    });\n  }\n\n  if (action.type === UPDATE_PAGE) {\n    const collectionToUpdate = action.payload.collectionName;\n\n    if (!collectionToUpdate) {\n      return { ...initialState\n      };\n    }\n\n    const currentCollection = state.collection[collectionToUpdate];\n\n    if (!currentCollection) {\n      return { ...initialState\n      };\n    }\n\n    return Object.assign({}, currentCollection, {\n      currentIndex: action.payload.currentIndex,\n      currentPage: action.payload.currentPage\n    });\n  }\n\n  if (action.type === ADD_FAVORITE) {\n    return Object.assign({}, state, {\n      favorites: state.favorites.concat(action.payload)\n    });\n  }\n\n  if (action.type === DELETE_FAVORITE) {\n    return Object.assign({}, state, {\n      favorites: state.favorites.concat(action.payload)\n    });\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/redux/reducers/index.jsx"],"names":["ADD_FAVORITE","DELETE_FAVORITE","UPDATE_BOOKS","UPDATE_PAGE","BookCollection","initialState","books_home","books_favorite","list","rootReducer","state","action","type","collectionToUpdate","payload","collectionName","merge","books","currentIndex","resultsPerPage","pageCount","currentPage","currentCollection","collection","Object","assign","favorites","concat"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,eAAtB,EAAuCC,YAAvC,EAAqDC,WAArD,QAAuE,2BAAvE;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,UAAU,EAAEF,cADQ;AAEpBG,EAAAA,cAAc,EAAEH,cAFI;AAGpBI,EAAAA,IAAI,EAAE;AAHc,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,YAApB,EAAkC;AACjC,UAAMW,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,cAA1C;AACA,WAAOL,KAAK,CAACG,kBAAD,CAAL,CAA0BG,KAA1B,CAAgC;AACtCC,MAAAA,KAAK,EAAEN,MAAM,CAACG,OAAP,CAAeG,KADgB;AAEtCC,MAAAA,YAAY,EAAEP,MAAM,CAACG,OAAP,CAAeI,YAFS;AAGtCC,MAAAA,cAAc,EAAER,MAAM,CAACG,OAAP,CAAeK,cAHO;AAItCC,MAAAA,SAAS,EAAET,MAAM,CAACG,OAAP,CAAeM,SAJY;AAKtCC,MAAAA,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeO;AALU,KAAhC,CAAP;AAOA;;AAED,MAAIV,MAAM,CAACC,IAAP,KAAgBT,WAApB,EAAiC;AAChC,UAAMU,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,cAA1C;;AACA,QAAI,CAACF,kBAAL,EAAyB;AACxB,aAAO,EAAC,GAAGR;AAAJ,OAAP;AACA;;AAED,UAAMiB,iBAAiB,GAAGZ,KAAK,CAACa,UAAN,CAAiBV,kBAAjB,CAA1B;;AACA,QAAI,CAACS,iBAAL,EAAwB;AACvB,aAAO,EAAC,GAAGjB;AAAJ,OAAP;AACA;;AACD,WAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,iBAAlB,EAAqC;AAC3CJ,MAAAA,YAAY,EAAEP,MAAM,CAACG,OAAP,CAAeI,YADc;AAE3CG,MAAAA,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeO;AAFe,KAArC,CAAP;AAIA;;AAED,MAAIV,MAAM,CAACC,IAAP,KAAgBZ,YAApB,EAAkC;AACjC,WAAOwB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,KAAlB,EAAyB;AAC/BgB,MAAAA,SAAS,EAAEhB,KAAK,CAACgB,SAAN,CAAgBC,MAAhB,CAAuBhB,MAAM,CAACG,OAA9B;AADoB,KAAzB,CAAP;AAGA;;AAED,MAAIH,MAAM,CAACC,IAAP,KAAgBX,eAApB,EAAqC;AACpC,WAAOuB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,KAAlB,EAAyB;AAC/BgB,MAAAA,SAAS,EAAEhB,KAAK,CAACgB,SAAN,CAAgBC,MAAhB,CAAuBhB,MAAM,CAACG,OAA9B;AADoB,KAAzB,CAAP;AAGA;;AACD,SAAOJ,KAAP;AACA,CAxCD;;AA0CA,eAAeD,WAAf","sourcesContent":["import {ADD_FAVORITE, DELETE_FAVORITE, UPDATE_BOOKS, UPDATE_PAGE} from '../constants/action-types';\nimport BookCollection from \"../../model/bookcollection.model\";\n\nconst initialState = {\n\tbooks_home: BookCollection,\n\tbooks_favorite: BookCollection,\n\tlist: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n\tif (action.type === UPDATE_BOOKS) {\n\t\tconst collectionToUpdate = action.payload.collectionName;\n\t\treturn state[collectionToUpdate].merge({\n\t\t\tbooks: action.payload.books,\n\t\t\tcurrentIndex: action.payload.currentIndex,\n\t\t\tresultsPerPage: action.payload.resultsPerPage,\n\t\t\tpageCount: action.payload.pageCount,\n\t\t\tcurrentPage: action.payload.currentPage\n\t\t})\n\t}\n\n\tif (action.type === UPDATE_PAGE) {\n\t\tconst collectionToUpdate = action.payload.collectionName;\n\t\tif (!collectionToUpdate) {\n\t\t\treturn {...initialState};\n\t\t}\n\n\t\tconst currentCollection = state.collection[collectionToUpdate];\n\t\tif (!currentCollection) {\n\t\t\treturn {...initialState};\n\t\t}\n\t\treturn Object.assign({}, currentCollection, {\n\t\t\tcurrentIndex: action.payload.currentIndex,\n\t\t\tcurrentPage: action.payload.currentPage,\n\t\t});\n\t}\n\n\tif (action.type === ADD_FAVORITE) {\n\t\treturn Object.assign({}, state, {\n\t\t\tfavorites: state.favorites.concat(action.payload),\n\t\t});\n\t}\n\n\tif (action.type === DELETE_FAVORITE) {\n\t\treturn Object.assign({}, state, {\n\t\t\tfavorites: state.favorites.concat(action.payload),\n\t\t});\n\t}\n\treturn state;\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}