{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\googlebooks\\\\client\\\\src\\\\components\\\\list\\\\list.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { updatePage } from \"../../redux/actions\";\nimport AppBook from \"../book/book\";\nimport './list.css';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst mapStateToProps = state => {\n  const storeProps = {};\n\n  for (const [key, value] of Object.entries(state)) {\n    storeProps[key] = value;\n  }\n\n  return {\n    storeProps\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatePage: pageUpdate => dispatch(updatePage(pageUpdate))\n  };\n};\n\nclass AppList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.props.updatePage({\n        currentPage: selectedPage,\n        currentIndex: offset\n      }, () => {\n        this.props.doSearch();\n      });\n    };\n  }\n\n  render() {\n    const collection = this.props.storeProps[this.props.collectionToUse];\n    const booksToMap = collection.books;\n    const pageCount = collection.pageCount;\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, booksToMap.map((singleBook, index) => /*#__PURE__*/React.createElement(AppBook, {\n      key: index,\n      singleBook: singleBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      className: \"pagination-class\",\n      count: pageCount,\n      onChange: this.handlePageClick,\n      showFirstButton: true,\n      showLastButton: true,\n      siblingCount: 2,\n      boundaryCount: 2,\n      size: \"large\",\n      variant: \"outlined\",\n      shape: \"rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppList);","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/components/list/list.jsx"],"names":["React","Component","Row","Col","connect","ListGroup","updatePage","AppBook","Pagination","mapStateToProps","state","storeProps","key","value","Object","entries","mapDispatchToProps","dispatch","pageUpdate","AppList","handlePageClick","e","selectedPage","selected","offset","perPage","props","currentPage","currentIndex","doSearch","render","collection","collectionToUse","booksToMap","books","pageCount","map","singleBook","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { updatePage } from \"../../redux/actions\";\nimport AppBook from \"../book/book\";\nimport './list.css';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst mapStateToProps = (state) => {\n\tconst storeProps = {};\n\tfor (const [key, value] of Object.entries(state)){\n\t\tstoreProps[key] = value;\n\t}\n\treturn {\n\t\tstoreProps\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdatePage: (pageUpdate) => dispatch(updatePage(pageUpdate)),\n\t};\n};\n\nclass AppList extends Component {\n\thandlePageClick = (e) => {\n\t\tconst selectedPage = e.selected;\n\t\tconst offset = selectedPage * this.state.perPage;\n\n\t\tthis.props.updatePage({\n\t\t\tcurrentPage: selectedPage,\n\t\t\tcurrentIndex: offset,\n\t\t}, () => {\n\t\t\tthis.props.doSearch();\n\t\t});\n\t}\n\n\trender() {\n\t\tconst collection = this.props.storeProps[this.props.collectionToUse];\n\t\tconst booksToMap = collection.books;\n\t\tconst pageCount = collection.pageCount;\n\n\t\treturn (\n\t\t\t<Col>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t{booksToMap.map((singleBook, index) => (\n\t\t\t\t\t\t\t\t<AppBook key={index} singleBook={singleBook}/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"text-center\">\n\t\t\t\t\t\t<Pagination className=\"pagination-class\" count={pageCount} onChange={this.handlePageClick} showFirstButton showLastButton siblingCount={2} boundaryCount={2} size=\"large\" variant=\"outlined\" shape=\"rounded\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Col>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppList);\n"]},"metadata":{},"sourceType":"module"}