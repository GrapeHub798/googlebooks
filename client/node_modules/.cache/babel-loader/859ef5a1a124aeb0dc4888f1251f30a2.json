{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\googlebooks\\\\client\\\\src\\\\pages\\\\home\\\\home.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport { BookErrors } from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport { connect } from 'react-redux';\nimport AppList from '../../components/list/list';\nimport { updateBooks } from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\nimport paginationService from \"../../services/pagination.service\";\n\nconst mapStateToProps = state => {\n  const storeProps = {};\n\n  for (const [key, value] of Object.entries(state)) {\n    storeProps[key] = value;\n  }\n\n  return {\n    storeProps\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateBooks: bookUpdate => new Promise((resolve, reject) => {\n    dispatch(updateBooks(bookUpdate));\n    resolve();\n  })\n});\n\nlet paginationSubject = new Subject();\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      fetchingBooks: false,\n      searchValue: '',\n      errorMessage: '',\n      oldSearchValue: '',\n      hasBooks: false,\n      defaultCollection: 'books_home',\n      resultsPerPage: 10,\n      currentPage: 1\n    };\n\n    this.doSearch = page_number => {\n      // get collection\n      const currentCollect = this.props.storeProps[this.state.defaultCollection];\n      const bookCollection = currentCollect ? currentCollect : new BookCollection();\n      let currentPage = page_number ? page_number : bookCollection.currentPage;\n      let searchIndex = (currentPage - 1) * this.state.resultsPerPage;\n      const oldSearchValue = this.state.oldSearchValue;\n      this.setState({\n        error: false\n      });\n      const searchValue = this.state.searchValue;\n\n      if (!searchValue) {\n        this.setState({\n          error: true,\n          errorMessage: BookErrors.nosearch\n        });\n        return;\n      } // reset pagination info on new search\n\n\n      if (searchValue !== oldSearchValue) {\n        searchIndex = 0;\n        currentPage = 1;\n      }\n\n      this.setState({\n        fetchingBooks: true\n      });\n      this.booksApi.searchBooks(searchValue, searchIndex).then(bookData => {\n        this.setState({\n          fetchingBooks: false\n        });\n        const bookTotal = bookData && bookData.data && bookData.data.totalItems;\n        const rawBookData = bookData && bookData.data && bookData.data.items;\n\n        if (!rawBookData) {\n          this.setState({\n            error: true,\n            errorMessage: BookErrors.nobooks\n          });\n          return;\n        }\n\n        const books = rawBookData.map(x => new BookModel(x));\n        const pageCount = Math.ceil(bookTotal / this.state.resultsPerPage);\n        this.props.updateBooks({\n          collectionName: this.state.defaultCollection,\n          books: books,\n          pageCount: pageCount,\n          currentPage: currentPage\n        }).then(() => {\n          this.setState({\n            error: false,\n            hasBooks: true,\n            oldSearchValue: searchValue\n          });\n        });\n      });\n    };\n\n    this.booksApi = new BooksApi();\n    this.paginationService = new PaginationService();\n  }\n\n  captureSearchValue(event) {\n    this.setState({\n      searchValue: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.subscription = paginationService.getPage().subscribe(pageNumber => {\n      this.doSearch(pageNumber);\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    const error = this.state.error;\n    const fetchingBooks = this.state.fetchingBooks;\n    const hasBooks = this.state.hasBooks;\n    const errorMessage = this.state.errorMessage;\n    const bookCollection = this.state.defaultCollection;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      className: \"mb-2\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: e => this.captureSearchValue(e),\n      placeholder: \"Search Books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"ml-2\",\n      size: \"sm\",\n      onClick: e => this.doSearch(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 12\n      }\n    }, \"Search\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, hasBooks ? /*#__PURE__*/React.createElement(AppList, {\n      collectionToUse: bookCollection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }\n    }) : fetchingBooks ? /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center fetching-books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Searching for books....\") : error ? /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, errorMessage) : /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 71\n      }\n    })));\n  }\n\n}\n\nconst AppHome = connect(mapStateToProps, mapDispatchToProps)(Home);\nexport default AppHome;","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/pages/home/home.jsx"],"names":["React","Component","Container","Row","Col","Form","Button","BooksApi","BookErrors","BookModel","connect","AppList","updateBooks","BookCollection","paginationService","mapStateToProps","state","storeProps","key","value","Object","entries","mapDispatchToProps","dispatch","bookUpdate","Promise","resolve","reject","paginationSubject","Subject","Home","constructor","props","error","fetchingBooks","searchValue","errorMessage","oldSearchValue","hasBooks","defaultCollection","resultsPerPage","currentPage","doSearch","page_number","currentCollect","bookCollection","searchIndex","setState","nosearch","booksApi","searchBooks","then","bookData","bookTotal","data","totalItems","rawBookData","items","nobooks","books","map","x","pageCount","Math","ceil","collectionName","PaginationService","captureSearchValue","event","target","componentDidMount","subscription","getPage","subscribe","pageNumber","componentWillUnmount","unsubscribe","render","submitHandler","e","AppHome"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport {BookErrors} from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport {connect} from 'react-redux';\nimport AppList from '../../components/list/list';\nimport {updateBooks} from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\nimport paginationService from \"../../services/pagination.service\";\n\nconst mapStateToProps = (state) => {\n\tconst storeProps = {};\n\tfor (const [key, value] of Object.entries(state)){\n\t\tstoreProps[key] = value;\n\t}\n\treturn {\n\t\tstoreProps\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateBooks: (bookUpdate) => new Promise((resolve, reject) => {\n\t\tdispatch(updateBooks(bookUpdate));\n\t\tresolve();\n\t})\n});\n\nlet paginationSubject = new Subject();\n\nclass Home extends Component {\n     state = {\n     \terror: false,\n     \tfetchingBooks: false,\n     \tsearchValue: '',\n     \terrorMessage: '',\n     \toldSearchValue: '',\n     \thasBooks: false,\n     \tdefaultCollection: 'books_home',\n     \tresultsPerPage: 10,\n     \tcurrentPage: 1\n     };\n\n     constructor(props) {\n     \tsuper(props);\n     \tthis.booksApi = new BooksApi();\n     \tthis.paginationService = new PaginationService();\n     }\n\n     captureSearchValue(event) {\n     \tthis.setState({searchValue: event.target.value});\n     }\n\n     componentDidMount() {\n     \tthis.subscription = paginationService.getPage().subscribe(pageNumber => {\n     \t\tthis.doSearch(pageNumber);\n     \t})\n     }\n\n     componentWillUnmount() {\n     \tthis.subscription.unsubscribe();\n     }\n\n     doSearch = (page_number) => {\n     \t// get collection\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tconst bookCollection = currentCollect ? currentCollect : new BookCollection();\n     \tlet currentPage = page_number ? page_number : bookCollection.currentPage;\n     \tlet searchIndex =  (currentPage - 1) * this.state.resultsPerPage;\n     \tconst oldSearchValue = this.state.oldSearchValue;\n     \tthis.setState({error: false});\n\n     \tconst searchValue = this.state.searchValue;\n     \tif (!searchValue) {\n     \t\tthis.setState({error: true, errorMessage: BookErrors.nosearch});\n     \t\treturn;\n     \t}\n\n     \t// reset pagination info on new search\n     \tif (searchValue !== oldSearchValue) {\n     \t\tsearchIndex = 0;\n     \t\tcurrentPage = 1;\n     \t}\n\n     \tthis.setState({fetchingBooks: true});\n     \tthis.booksApi.searchBooks(searchValue, searchIndex)\n     \t\t.then((bookData) => {\n     \t\t\tthis.setState({fetchingBooks: false});\n     \t\t\tconst bookTotal = bookData && bookData.data && bookData.data.totalItems;\n     \t\t\tconst rawBookData = bookData && bookData.data && bookData.data.items;\n     \t\t\tif (!rawBookData) {\n     \t\t\t\tthis.setState({error: true, errorMessage: BookErrors.nobooks});\n     \t\t\t\treturn;\n     \t\t\t}\n     \t\t\tconst books = rawBookData.map((x) => new BookModel(x));\n     \t\t\tconst pageCount = Math.ceil(bookTotal / this.state.resultsPerPage);\n     \t\t\tthis.props.updateBooks({\n     \t\t\t\tcollectionName: this.state.defaultCollection,\n     \t\t\t\tbooks: books,\n     \t\t\t\tpageCount: pageCount,\n     \t\t\t\tcurrentPage: currentPage,\n     \t\t\t}).then(() => {\n     \t\t\t\tthis.setState({error: false, hasBooks: true, oldSearchValue: searchValue});\n     \t\t\t});\n\n     \t\t});\n     }\n\n     render() {\n     \tconst error = this.state.error;\n     \tconst fetchingBooks = this.state.fetchingBooks;\n     \tconst hasBooks = this.state.hasBooks;\n     \tconst errorMessage = this.state.errorMessage;\n     \tconst bookCollection = this.state.defaultCollection;\n     \treturn (\n     \t\t<Container>\n     \t\t\t<Row>\n     \t\t\t\t<Col>\n     \t\t\t\t\t<Form inline className=\"mb-2\" onSubmit={this.submitHandler}>\n     \t\t\t\t\t\t<Form.Control type=\"text\" onChange={(e) => this.captureSearchValue(e)}\n     \t\t\t\t\t\t\tplaceholder=\"Search Books\"/>\n     \t\t\t\t\t\t<Button variant=\"primary\" className=\"ml-2\" size=\"sm\"\n     \t\t\t\t\t\t\tonClick={(e) => this.doSearch(e)}>Search</Button>\n     \t\t\t\t\t</Form>\n     \t\t\t\t</Col>\n     \t\t\t</Row>\n     \t\t\t<Row>\n     \t\t\t\t{hasBooks ? <AppList collectionToUse = {bookCollection}/> : fetchingBooks ?\n     \t\t\t\t\t<Col className=\"text-center fetching-books\">Searching for books....</Col> :\n     \t\t\t\t\terror ? <Col className=\"text-center\">{errorMessage}</Col> : <Col/>}\n     \t\t\t</Row>\n     \t\t</Container>);\n     }\n}\n\nconst AppHome = connect(mapStateToProps, mapDispatchToProps)(Home);\nexport default AppHome;\n"]},"metadata":{},"sourceType":"module"}