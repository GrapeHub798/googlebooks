{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\googlebooks\\\\client\\\\src\\\\pages\\\\home\\\\home.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport { BookErrors } from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport { connect } from 'react-redux';\nimport AppList from '../../components/list/list';\nimport { updateBooks } from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\n\nconst mapStateToProps = state => {\n  return {\n    collection: state.collection\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateBooks: bookUpdate => dispatch(updateBooks(bookUpdate))\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      fetchingBooks: false,\n      searchValue: '',\n      errorMessage: '',\n      oldSearchValue: '',\n      hasBooks: false,\n      defaultCollection: 'books'\n    };\n\n    this.doSearch = e => {\n      e.preventDefault(); // get collection\n\n      const currentCollect = this.props.collection[this.state.defaultCollection];\n      const bookCollection = currentCollect ? currentCollect : new BookCollection();\n      let searchIndex = bookCollection.currentIndex;\n      const currentPage = bookCollection.currentPage;\n      const oldSearchValue = this.state.oldSearchValue;\n      this.setState({\n        error: false\n      });\n      const searchValue = this.state.searchValue;\n\n      if (!searchValue) {\n        this.setState({\n          error: true,\n          errorMessage: BookErrors.nosearch\n        });\n        return;\n      } // reset pagination info on new search\n\n\n      if (searchValue !== oldSearchValue) {\n        searchIndex = 0;\n      }\n\n      this.setState({\n        fetchingBooks: true\n      });\n      this.booksApi.searchBooks(searchValue, searchIndex).then(bookData => {\n        this.setState({\n          fetchingBooks: false\n        });\n        const bookTotal = bookData && bookData.data;\n        const rawBookData = bookData && bookData.data && bookData.data.items;\n\n        if (!rawBookData) {\n          this.setState({\n            error: true,\n            errorMessage: BookErrors.nobooks\n          });\n          return;\n        }\n\n        const books = rawBookData.map(x => new BookModel(x));\n        const pageCount = Math.ceil(bookTotal / this.state.resultsPerPage); //this.setState({error: false, hasBooks: true, oldSearchValue: searchValue});\n\n        this.props.updateBooks({\n          collectionName: 'books',\n          books: books,\n          pageCount: pageCount,\n          currentPage: currentPage,\n          currentIndex: searchIndex\n        }).then(() => {\n          console.log('hello');\n        });\n      });\n    };\n\n    this.booksApi = new BooksApi();\n  }\n\n  captureSearchValue(event) {\n    this.setState({\n      searchValue: event.target.value\n    });\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    const error = this.state.error;\n    const fetchingBooks = this.state.fetchingBooks;\n    const hasBooks = this.state.hasBooks;\n    const errorMessage = this.state.errorMessage;\n    const bookCollection = this.state.defaultCollection;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      className: \"mb-2\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"my-1 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }\n    }, \"Book Search:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: e => this.captureSearchValue(e),\n      placeholder: \"Search For Books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"ml-2\",\n      size: \"sm\",\n      onClick: e => this.doSearch(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }\n    }, \"Search\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, hasBooks ? /*#__PURE__*/React.createElement(AppList, {\n      collectionToUse: bookCollection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }\n    }) : fetchingBooks ? /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center fetching-books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Searching for books....\") : error ? /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, errorMessage) : /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 71\n      }\n    })));\n  }\n\n}\n\nconst AppHome = connect(mapStateToProps, mapDispatchToProps)(Home);\nexport default AppHome;","map":{"version":3,"sources":["D:/Code/googlebooks/client/src/pages/home/home.jsx"],"names":["React","Component","Container","Row","Col","Form","Button","BooksApi","BookErrors","BookModel","connect","AppList","updateBooks","BookCollection","mapStateToProps","state","collection","mapDispatchToProps","dispatch","bookUpdate","Home","constructor","props","error","fetchingBooks","searchValue","errorMessage","oldSearchValue","hasBooks","defaultCollection","doSearch","e","preventDefault","currentCollect","bookCollection","searchIndex","currentIndex","currentPage","setState","nosearch","booksApi","searchBooks","then","bookData","bookTotal","data","rawBookData","items","nobooks","books","map","x","pageCount","Math","ceil","resultsPerPage","collectionName","console","log","captureSearchValue","event","target","value","submitHandler","render","AppHome"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport {BookErrors} from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport {connect} from 'react-redux';\nimport AppList from '../../components/list/list';\nimport {updateBooks} from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcollection: state.collection,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateBooks: (bookUpdate) => dispatch(updateBooks(bookUpdate)),\n});\n\nclass Home extends Component {\n     state = {\n     \terror: false,\n     \tfetchingBooks: false,\n     \tsearchValue: '',\n     \terrorMessage: '',\n     \toldSearchValue: '',\n     \thasBooks: false,\n     \tdefaultCollection: 'books',\n     };\n\n     constructor(props) {\n     \tsuper(props);\n     \tthis.booksApi = new BooksApi();\n     }\n\n     captureSearchValue(event) {\n     \tthis.setState({searchValue: event.target.value});\n     }\n\n     doSearch = (e) => {\n     \te.preventDefault();\n     \t// get collection\n     \tconst currentCollect = this.props.collection[this.state.defaultCollection];\n     \tconst bookCollection = currentCollect ? currentCollect : new BookCollection();\n     \tlet searchIndex = bookCollection.currentIndex;\n     \tconst currentPage = bookCollection.currentPage;\n     \tconst oldSearchValue = this.state.oldSearchValue;\n     \tthis.setState({error: false});\n\n     \tconst searchValue = this.state.searchValue;\n     \tif (!searchValue) {\n     \t\tthis.setState({error: true, errorMessage: BookErrors.nosearch});\n     \t\treturn;\n     \t}\n\n     \t// reset pagination info on new search\n     \tif (searchValue !== oldSearchValue) {\n     \t\tsearchIndex = 0;\n     \t}\n\n     \tthis.setState({fetchingBooks: true});\n     \tthis.booksApi.searchBooks(searchValue, searchIndex)\n     \t\t.then((bookData) => {\n     \t\t\tthis.setState({fetchingBooks: false});\n     \t\t\tconst bookTotal = bookData && bookData.data;\n     \t\t\tconst rawBookData = bookData && bookData.data && bookData.data.items;\n     \t\t\tif (!rawBookData) {\n     \t\t\t\tthis.setState({error: true, errorMessage: BookErrors.nobooks});\n     \t\t\t\treturn;\n     \t\t\t}\n     \t\t\tconst books = rawBookData.map((x) => new BookModel(x));\n     \t\t\tconst pageCount = Math.ceil(bookTotal / this.state.resultsPerPage);\n     \t\t\t//this.setState({error: false, hasBooks: true, oldSearchValue: searchValue});\n     \t\t\tthis.props.updateBooks({\n     \t\t\t\tcollectionName: 'books',\n     \t\t\t\tbooks: books,\n     \t\t\t\tpageCount: pageCount,\n     \t\t\t\tcurrentPage: currentPage,\n     \t\t\t\tcurrentIndex: searchIndex,\n     \t\t\t}).then(() => {\n     \t\t\t\tconsole.log('hello');\n     \t\t\t});\n\n     \t\t});\n     }\n\n     submitHandler(e) {\n     \te.preventDefault();\n     }\n\n     render() {\n     \tconst error = this.state.error;\n     \tconst fetchingBooks = this.state.fetchingBooks;\n     \tconst hasBooks = this.state.hasBooks;\n     \tconst errorMessage = this.state.errorMessage;\n     \tconst bookCollection = this.state.defaultCollection;\n     \treturn (\n     \t\t<Container>\n     \t\t\t<Row>\n     \t\t\t\t<Col>\n     \t\t\t\t\t<Form inline className=\"mb-2\" onSubmit={this.submitHandler}>\n     \t\t\t\t\t\t<Form.Label className=\"my-1 mr-2\">Book Search:</Form.Label>\n     \t\t\t\t\t\t<Form.Control type=\"text\" onChange={(e) => this.captureSearchValue(e)}\n     \t\t\t\t\t\t\tplaceholder=\"Search For Books\"/>\n     \t\t\t\t\t\t<Button variant=\"primary\" className=\"ml-2\" size=\"sm\"\n     \t\t\t\t\t\t\tonClick={(e) => this.doSearch(e)}>Search</Button>\n     \t\t\t\t\t</Form>\n     \t\t\t\t</Col>\n     \t\t\t</Row>\n     \t\t\t<Row>\n     \t\t\t\t{hasBooks ? <AppList collectionToUse = {bookCollection}/> : fetchingBooks ?\n     \t\t\t\t\t<Col className=\"text-center fetching-books\">Searching for books....</Col> :\n     \t\t\t\t\terror ? <Col className=\"text-center\">{errorMessage}</Col> : <Col/>}\n     \t\t\t</Row>\n     \t\t</Container>);\n     }\n}\n\nconst AppHome = connect(mapStateToProps, mapDispatchToProps)(Home);\nexport default AppHome;\n"]},"metadata":{},"sourceType":"module"}